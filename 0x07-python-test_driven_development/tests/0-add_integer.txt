Test for 0-add_integer module
=============================

Import checks
-------------

Import the function:
	>>> add_integer = __import__('0-add_integer').add_integer

Documentation chacks
--------------------

Check for module documentation:
	>>> mod_doc = __import__('0-add_integer').__doc__
	>>> len(mod_doc) > 1
	True

Check for function documentation:
	>>> func_doc = __import__('0-add_integer').add_integer.__doc__
	>>> len(func_doc) > 1
	True

Value checks
------------

Check for addition of integer and float:
	>>> add_integer(4.3, 2)
	6

	>>> add_integer(100, 2.1)
	102

Check for addition of positive integers:
	>>> add_integer(1, 2)
	3

Check for addition with negative integer:
	>>> add_integer(100, -2)
	98

Check for addition with negative integers:
	>>> add_integer(-2, -3)
	-5

Check for addition with negative float and integer
	>>> add_integer(-4.2, -1)
	-5

Test with only one integer:
	>>> add_integer(2)
	100

Test with one float value:
	>>> add_integer(100.3, -2)
	98

Traceback checks
----------------

Check for addition of integer and string value:
	>>> add_integer(4, "School")
	Traceback (most recent call last):
		...
	TypeError: b must be an integer

Test with value 'None':
	>>> add_integer(None)
	Traceback (most recent call last):
		...
	TypeError: a must be an integer

Check for float overflow:
	>>> add_integer(1.8e308)
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Check fo addition with float NaN:
	>>> add_integer(float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer
